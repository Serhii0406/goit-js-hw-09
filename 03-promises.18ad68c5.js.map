{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,oBAKjC,SAASG,EAAcC,EAAUN,GAC/B,IAAMO,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiB,SAACI,EAASC,GAC3BC,YAAW,WACTF,EAAQ,CAAEL,WAAUN,S,GACnBA,E,EAGc,SAACW,EAASC,GAC3BC,YAAW,WACTD,EAAO,CAAEN,WAAUN,S,GAClBA,E,GAdIC,SAASC,cAAc,SAmB/BY,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAKN,IAJA,IAAIC,EAAQC,OAAOnB,EAAKC,MAAMmB,OACxBhB,EAAOe,OAAOnB,EAAKI,KAAKgB,OACxBf,EAASc,OAAOnB,EAAKK,OAAOe,OAEzBC,EAAI,EAAGA,GAAKhB,EAAQgB,IAC3Bf,EAAce,EAAGH,GACdI,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUN,EAAKsB,EAALtB,MACjBuB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAAN1B,EAAM,M,IAEvE2B,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUN,EAAKsB,EAALtB,MAClBuB,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAAN1B,EAAM,M,IAEvEiB,GAASd,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise((resolve, reject) => {\n      setTimeout(function () {\n        resolve({ position, delay });\n      }, delay);\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      setTimeout(function () {\n        reject({ position, delay });\n      }, delay);\n    });\n  }\n}\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n});"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.18ad68c5.js.map"}