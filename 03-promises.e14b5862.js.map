{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,oBAG3BG,EAAOJ,SAASC,cAAc,SASpC,SAASI,EAAcC,EAAUP,GAC/B,MAAMQ,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiB,CAACI,EAASC,KAC3BC,YAAW,WACTF,EAAQ,C,SAAEL,E,MAAUP,G,GACnBA,EAAM,EAGQ,CAACY,EAASC,KAC3BC,YAAW,WACTD,EAAO,C,SAAEN,E,MAAUP,G,GAClBA,EAAM,E,CApBfK,EAAKU,iBAAiB,SAEtB,YACMhB,EAAKK,OAAOY,MAAQ,GAAMjB,EAAKC,MAAMgB,MAAQ,GAAKjB,EAAKI,KAAKa,MAAQ,IACtEC,EAAApB,GAASqB,OAAOC,QAAQ,wC,IAqB5Bd,EAAKU,iBAAiB,UAAU,SAAUK,GACxCA,EAAMC,iBACN,IAAIC,EAAQC,OAAOxB,EAAKC,MAAMgB,OAC9B,MAAMb,EAAOoB,OAAOxB,EAAKI,KAAKa,OACxBZ,EAASmB,OAAOxB,EAAKK,OAAOY,OAElC,IAAK,IAAIQ,EAAI,EAAGA,GAAKpB,EAAQoB,IAC3BlB,EAAckB,EAAGF,GACdG,MAAK,EAAClB,SAAEA,EAAQP,MAAEA,MACjBiB,EAAApB,GAASqB,OAAOQ,QAAQ,uBAAqBnB,QAAiBP,MAAU,IAEzE2B,OAAM,EAACpB,SAAEA,EAAQP,MAAEA,MAClBiB,EAAApB,GAASqB,OAAOC,QAAQ,sBAAoBZ,QAAeP,MAAU,IAEzEsB,GAASnB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('input', inputChecked);\n\nfunction inputChecked() {\n  if (refs.amount.value < 0  || refs.delay.value < 0 || refs.step.value < 0) {\n    Notiflix.Notify.failure('Please, enter a number greater than 0');\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise((resolve, reject) => {\n      setTimeout(function () {\n        resolve({ position, delay });\n      }, delay);\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      setTimeout(function () {\n        reject({ position, delay });\n      }, delay);\n    });\n  }\n}\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n     \n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n});"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","$47d4ff9957288465$var$form","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","value","$parcel$interopDefault","Notify","failure","event","preventDefault","delay1","Number","i","then","success","catch"],"version":3,"file":"03-promises.e14b5862.js.map"}